# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution:
    def getIntersectionNode(self, headA: ListNode, headB: ListNode) -> Optional[ListNode]:
        a = ['a']
        b = ['b']
        def see_node(n,x):
            if n:
                x.append(n)
                see_node(n.next,x)
                
        see_node(headA, a)
        see_node(headB, b)
        p = None
        while a and b:
            nodeA = a.pop(-1)
            nodeB = b.pop(-1)
            if nodeA != nodeB:
                return p
            p = nodeA
